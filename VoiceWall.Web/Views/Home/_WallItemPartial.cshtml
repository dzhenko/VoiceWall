@using VoiceWall.Web.Helpers.Html
@using VoiceWall.Web.ViewModels
@model VoiceWall.Web.ViewModels.WallItemViewModel

<div class="container wallItemMainHolder" data-wall-item-id="@Model.Id">
    <div class="row">
        <div class="col-md-6">
            <div class="row">
                <div class="main-image-holder" style="background-image:url(@(Model.ContentType == ContentType.Picture ? Model.ContentUrl : Model.UserImage))">
                    <p class="image-holder-header">
                        <span class="pull-left lead">
                            @Html.ActionLink(Model.UserName, "Details", new { UserID = Model.UserId })
                        </span>
                        <img class="pull-right" width="90" height="90" alt="User" src="@Model.UserImage">
                    </p>
                    @Html.FontAwesomeMultimediaActionLink(Model.ContentUrl, Model.ContentType, new { @class = "multimedia-main-action" })
                    <p class="image-holder-footer">
                        @Html.FontAwesomeItemStats(Model.Likes, Model.Hates, Model.Views, Model.Flags)
                        <small class="pull-right">
                            @Html.DisplayFor(m => m.Created)
                        </small>
                    </p>
                </div>
            </div>
            <div class="row main-create-comment-holder">
                <div class="pull-left">
                    @Html.FontAwesomeButton("Comment", "comment", new { @class = "commentBtn pull-left" })
                    @Html.FontAwesomeButton("Voice", "microphone", new { @class = "voiceBtn commentInnerBtn" })
                    @Html.FontAwesomeButton("Picture", "picture-o", new { @class = "pictureBtn commentInnerBtn" })
                    @Html.FontAwesomeButton("Video", "video-camera", new { @class = "videoBtn commentInnerBtn" })
                </div>
                <div class="pull-right">
                    @Html.FontAwesomeButton("React", "exclamation-triangle", new { @class = "reactBtn pull-right" })
                    @Html.FontAwesomeButton("Like", "thumbs-up", new { @class = "likeBtn reactInnerBtn" }, Model.IsLiked == true)
                    @Html.FontAwesomeButton("Hate", "thumbs-down", new { @class = "hateBtn reactInnerBtn" }, Model.IsLiked == false)
                    @Html.FontAwesomeButton("Flag", "flag", new { @class = "flagBtn reactInnerBtn" }, Model.IsFlagged)
                </div>
            </div>
        </div>
        <div class="col-md-6 main-comments-holder">
            <h1 class =" text-center">Reactions</h1>
            @if (Model.Comments.Count() == 0)
            {
                <h4 class=" text-center">None yet</h4>
            }
            else
            {
                foreach (var comment in Model.Comments)
                {
                    Html.RenderPartial("_CommentItemPartial", comment);
                }
            }
        </div>
    </div>
</div>
